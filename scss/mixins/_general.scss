/* MARGIN MIXINS */

@mixin marginAuto { margin: { left: auto; right: auto; } }

@mixin marginEnds($spacing: $spacing-unit) { margin: { top: $spacing; bottom: $spacing; } }

@mixin marginSides($spacing: $spacing-unit) { margin: { left: $spacing; right: $spacing; } }

@mixin marginOffset($spacing: $spacing-unit) { margin: { left: -$spacing; right: -$spacing; } }

@mixin marginResetEnds { margin: { top: 0; bottom: 0; } }
@mixin marginResetSides { margin: { left: 0; right: 0; } }

/* PADDING MIXINS */

@mixin paddingEnds($spacing: $spacing-unit) { padding: { top: $spacing; bottom: $spacing; } }
@mixin paddingSides($spacing: $spacing-unit) { padding: { left: $spacing; right: $spacing; } }

@mixin paddingResetEnds { padding: { top: 0; bottom: 0; } }
@mixin paddingResetSides { padding: { left: 0; right: 0; } }

/* CLEARFIX MIXIN */

@mixin clearfix() {
  &::after {
    display: block;
    display: contents;
    clear: both;
    line-height: 0;
    height: 0;
    content: " ";
  }
}

@mixin ccf() {
  &:before, &:after {
    display: block;
    display: contents;
    clear: both;
    content: " ";
  }
  
  &:after {
    clear: both;
  }
}

/* MIN HEIGHT */

@mixin minHeight() {
  min-height: 1px;
}

@mixin placeholders {
    &.placeholder { @content; }
    &:-moz-placeholder { @content; }
    &::-moz-placeholder { @content; }
    &:-ms-input-placeholder { @content; }
    &::-webkit-input-placeholder { @content; }
}

@mixin hardware($backface: true, $perspective: 1000) {
    @if $backface {
        backface-visibility: hidden;
    }
    perspective: $perspective;
}

@mixin flexbox {
	display: flex;
	flex-flow: row wrap;
	justify-content: center;
}

/* PUSH */

@mixin margin-push($dir: null, $spacing: $spacing-unit) {
  @if ($dir == left) {
    margin-left: $spacing;
  }
  
  @else if ($dir == right) {
    margin-right: $spacing;
  }
  
  @else if ($dir == lr) {
    margin: {
      left: $spacing;
      right: $spacing;
    }
  }
  
  @else if ($dir == top) {
    margin-top: $spacing;
  }
  
  @else if ($dir == bottom) {
    margin-bottom: $spacing;
  }
  
  @else if ($dir == tb) {
    margin: {
      top: $spacing;
      bottom: $spacing;
    }
  }
  
  @else if (dir == null) {
    margin: {
      top: $spacing;
      right: $spacing;
      bottom: $spacing;
      left: $spacing;
    }
  }
}

@mixin padding-push($dir: null, $spacing: $spacing-unit) {
  @if ($dir == left) {
    padding-left: $spacing;
  }
  
  @else if ($dir == right) {
    padding-right: $spacing;
  }
  
  @else if ($dir == lr) {
    padding: {
      left: $spacing;
      right: $spacing;
    }
  }
  
  @else if ($dir == top) {
    padding-top: $spacing;
  }
  
  @else if ($dir == bottom) {
    padding-top: $spacing;
  }
  
  @else if ($dir == tb) {
    padding: {
      top: $spacing;
      bottom: $spacing;
    }
  }
  
  @else if (dir == null) {
    padding: {
      top: $spacing;
      right: $spacing;
      bottom: $spacing;
      left: $spacing;
    }
  }
}

/* Fill Available */

@mixin intrinsic($property, $value) {
  @if $value == fit-content or $value == min-content or $value == max-content {
    #{$property}: -webkit-#{$value};
    #{$property}: -moz-#{$value};
    #{$property}: $value;
  }

  @else if $value == fill-available or $value == available {
    #{$property}: -webkit-fill-available;
    #{$property}: -moz-available;
    #{$property}: fill-available;
  }

  @else {
    #{$property}: $value;
  }
}

@mixin template-flexbox {
	display: flex;
	justify-content: center;
	
	@include mq() {
		flex-flow: row wrap;
	}
	@include mq(big-desktop) {
		flex-flow: row wrap;
	}
	@include mq(desktop) {
		flex-flow: row wrap;
	}
	@include mq(tab-x) {
		flex-flow: row wrap;
	}
	@include mq(tablet) {
		flex-flow: column wrap;
	}
	@include mq(phone) {
		flex-flow: column wrap;
	}
}

@mixin gtc { grid-auto-flow: column; justify-content: space-around; }
@mixin gtc-tablet { grid-auto-flow: column; justify-content: space-around; }
@mixin gtr { grid-auto-flow: row; }

@mixin template-grid {
	display: grid;
	
	@include mq() {
		@include gtc;
	}
	
	@include mq(big-desktop) {
		@include gtc;
	}
	
	@include mq(desktop) {
		@include gtc;
	}
	
	@include mq(tab-x) {
		@include gtc;
	}
	
	@include mq(tablet) {
		@include gtr;
	}
	
	@include mq(phone) {
		@include gtr;
	}
}

@mixin innerWidth {
	@include mq() {
		min-width: 1920px;
		max-width: 1920px;
        @include marginAuto;
	}
	@include mq(big-desktop) {
		min-width: 1600px;
		max-width: 1920px;
	}
	@include mq(desktop) {
		min-width: 1024px;
		max-width: 1600px;
	}
	@include mq(tab-x) {
		min-width: 768px;
		max-width: 1024px;
	}
	@include mq(tablet) {
		min-width: 100%;
		max-width: 100%;
	}
	@include mq(phone) {
		min-width: 100%;
		max-width: 100%;
	}
	
	//width: 100%;
}